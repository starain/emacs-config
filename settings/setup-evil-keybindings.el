(require 'setup-evil)
(require 'setup-which-key)

(setq yi-evil-leader "<SPC>")
(setq yi-evil-leader-non-normal-prefix "C-c ")
(setq evil-leader/in-all-states 1)

(evil-leader/set-leader yi-evil-leader yi-evil-leader-non-normal-prefix)
(setq-default evil-escape-key-sequence "jk")

(defun yi/w3m-dict-cn (word)
  "Opens dict.cn to translate word to chinese."
  (interactive
   (list (read-string "Enter an English word: ")))
  (w3m-goto-url-new-session
   (concat "http://dict.cn/" word)))

(defun yi/w3m-goto-url (url)
  "Opens url, auto append http prefix."
  (interactive
   (list (read-string "Enter a URL after http://: ")))
  (w3m-goto-url-new-session
   (concat "http://" url)))

(setq yi-default-map
      '(("f" (("a" helm-find-files)
              ("f" helm-projectile-find-file)
              ("s" save-buffer))
         "Files")
        ("b" (("b" helm-projectile-switch-to-buffer)
              ("a" helm-mini)
              ("j" swbuff-switch-to-next-buffer)
              ("k" swbuff-switch-to-previous-buffer)
              ("d" kill-buffer))
         "Buffers")
        ("p" (("h" helm-projectile)
              ("f" helm-projectile-find-file)
              ("p" helm-projectile-switch-project))
         "Projectile")
        ("r" (("y" helm-show-kill-ring)
              ("m" helm-all-mark-rings))
         "Rings")
        ("s" (("b" helm-occur)
              ("p" helm-projectile-ag)
              ("g" w3m-search-new-session)
              ("w" yi/w3m-goto-url)
              ("d" (("c" yi/w3m-dict-cn))
               "Dictonary"))
         "Search")
        ("n" (("r" narrow-to-region)
              ("p" narrow-to-page)
              ("f" narrow-to-defun)
              ("w" widen))
         "Narrow")
        ("j" (("b" avy-pop-mark)
              ("j" evil-avy-goto-char)
              ("J" evil-avy-goto-char-2)
              ("l" evil-avy-goto-line))
         "Jump")
        ("w" (("s" split-window-below)
              ("v" split-window-right)
              ("d" delete-window)
              ("w" ace-window)
              ("m" delete-other-windows)
              ("=" balance-windows))
         "Window")
        ("i" (("s" yas-insert-snippet)
              ("y" helm-show-kill-ring)
              ("n" yas-new-snippet))
         "Insert")
        ("g" (("s" magit-status))
         "Git")
        ("<SPC>" helm-M-x)
        ("!" shell-command)
        ("u" universal-argument)))

;; Populate all keybindings defined in a map.
(defun yi/set-keybindings (key def &optional doc)
  (unless (null doc)
    (which-key-add-key-based-replacements (concat "<SPC> " key) doc))
  (unless (null doc)
    (which-key-add-key-based-replacements (concat "C-c <SPC> " key) doc))
  (if (listp def)
      (mapc (lambda (x) (apply #'yi/set-keybindings (concat key (pop x)) x))
            def)
    (evil-leader/set-key key def)))

(mapc (lambda (x) (apply #'yi/set-keybindings x))
      yi-default-map)

(provide 'setup-evil-keybindings)
